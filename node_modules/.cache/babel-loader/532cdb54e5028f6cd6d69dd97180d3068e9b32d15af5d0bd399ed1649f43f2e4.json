{"ast":null,"code":"var _jsxFileName = \"/Users/9dgy/Desktop/CS392/quiz-app/src/components/Questions.js\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport \"./QuizStyles.css\";\n\n// component for displaying a question and its answers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  questionIndex,\n  // index of the current question\n  setQuestionIndex,\n  // function to update the current question index\n  questions,\n  // array of all questions\n  setShowQuestionsPage,\n  // function to hide the questions page\n  setShowFinalPage,\n  // function to show the final page\n  score,\n  // current score\n  setScore // function to update the score\n}) => {\n  // handles the click on an answer\n  const handleClick = isCorrect => {\n    if (questionIndex < 9) {\n      // checks if there are more questions\n      if (isCorrect) {\n        // increment score by 100 if the answer is correct\n        setScore(score => score += 100);\n      }\n      // move to the next question\n      setQuestionIndex(prevIndex => prevIndex + 1);\n    } else {\n      // if it's the last question\n      if (isCorrect) {\n        // increment score if the answer is correct\n        setScore(score => score += 100);\n      }\n      // show the final page and hide the questions page\n      setShowQuestionsPage(false);\n      setShowFinalPage(true);\n    }\n  };\n\n  // render the question card with question text, answers, score, and question number\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"question\",\n      children: questions[questionIndex].questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: questions[questionIndex].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer\",\n        // react key for list items\n        onClick: () => handleClick(answer.correctAnswer) // calls handleClick when an answer is clicked\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer.answerText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question_number\",\n      children: [\"Question \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: questionIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 26\n      }, this), \"/10 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","Question","questionIndex","setQuestionIndex","questions","setShowQuestionsPage","setShowFinalPage","score","setScore","handleClick","isCorrect","prevIndex","children","className","questionText","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","answer","index","onClick","correctAnswer","answerText","_c","$RefreshReg$"],"sources":["/Users/9dgy/Desktop/CS392/quiz-app/src/components/Questions.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport \"./QuizStyles.css\";\n\n// component for displaying a question and its answers\nconst Question = ({\n    questionIndex, // index of the current question\n    setQuestionIndex, // function to update the current question index\n    questions, // array of all questions\n    setShowQuestionsPage, // function to hide the questions page\n    setShowFinalPage, // function to show the final page\n    score, // current score\n    setScore, // function to update the score\n}) => {\n    // handles the click on an answer\n    const handleClick = (isCorrect) => {\n        if (questionIndex < 9) { // checks if there are more questions\n            if (isCorrect) {\n                // increment score by 100 if the answer is correct\n                setScore((score) => score += 100);\n            }\n            // move to the next question\n            setQuestionIndex((prevIndex) => prevIndex + 1);\n        }\n        else {\n            // if it's the last question\n            if (isCorrect) {\n                // increment score if the answer is correct\n                setScore((score) => score += 100);\n            }\n            // show the final page and hide the questions page\n            setShowQuestionsPage(false);\n            setShowFinalPage(true);\n        }\n    };\n\n    // render the question card with question text, answers, score, and question number\n    return (\n        <Card>\n            <h1 className=\"question\">{questions[questionIndex].questionText}</h1>\n            <div className=\"answers\">\n                {questions[questionIndex].answers.map((answer, index) => (\n                    <div\n                        className=\"answer\"\n                        key={index} // react key for list items\n                        onClick={() => handleClick(answer.correctAnswer)} // calls handleClick when an answer is clicked\n                    >\n                        <p>{answer.answerText}</p>\n                    </div>\n                ))}\n            </div>\n            <p className=\"score\">\n                Score: <span>{score}</span> {/* displays the current score */}\n            </p>\n            <p className=\"question_number\">\n                Question <span>{questionIndex + 1}</span>/10 {/* displays the current question number */}\n            </p>\n        </Card>\n    );\n};\n\nexport default Question;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,kBAAkB;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EACdC,aAAa;EAAE;EACfC,gBAAgB;EAAE;EAClBC,SAAS;EAAE;EACXC,oBAAoB;EAAE;EACtBC,gBAAgB;EAAE;EAClBC,KAAK;EAAE;EACPC,QAAQ,CAAE;AACd,CAAC,KAAK;EACF;EACA,MAAMC,WAAW,GAAIC,SAAS,IAAK;IAC/B,IAAIR,aAAa,GAAG,CAAC,EAAE;MAAE;MACrB,IAAIQ,SAAS,EAAE;QACX;QACAF,QAAQ,CAAED,KAAK,IAAKA,KAAK,IAAI,GAAG,CAAC;MACrC;MACA;MACAJ,gBAAgB,CAAEQ,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IAClD,CAAC,MACI;MACD;MACA,IAAID,SAAS,EAAE;QACX;QACAF,QAAQ,CAAED,KAAK,IAAKA,KAAK,IAAI,GAAG,CAAC;MACrC;MACA;MACAF,oBAAoB,CAAC,KAAK,CAAC;MAC3BC,gBAAgB,CAAC,IAAI,CAAC;IAC1B;EACJ,CAAC;;EAED;EACA,oBACIN,OAAA,CAACF,IAAI;IAAAc,QAAA,gBACDZ,OAAA;MAAIa,SAAS,EAAC,UAAU;MAAAD,QAAA,EAAER,SAAS,CAACF,aAAa,CAAC,CAACY;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrElB,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAD,QAAA,EACnBR,SAAS,CAACF,aAAa,CAAC,CAACiB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChDtB,OAAA;QACIa,SAAS,EAAC,QAAQ;QACN;QACZU,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAACY,MAAM,CAACG,aAAa,CAAE,CAAC;QAAA;QAAAZ,QAAA,eAElDZ,OAAA;UAAAY,QAAA,EAAIS,MAAM,CAACI;QAAU;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAHrBI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNlB,OAAA;MAAGa,SAAS,EAAC,OAAO;MAAAD,QAAA,GAAC,SACV,eAAAZ,OAAA;QAAAY,QAAA,EAAOL;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACJlB,OAAA;MAAGa,SAAS,EAAC,iBAAiB;MAAAD,QAAA,GAAC,WAClB,eAAAZ,OAAA;QAAAY,QAAA,EAAOV,aAAa,GAAG;MAAC;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEf,CAAC;AAACQ,EAAA,GAtDIzB,QAAQ;AAwDd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}