{"ast":null,"code":"var _jsxFileName = \"/Users/9dgy/Desktop/CS392/quiz-app/src/components/Questions.js\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport './QuizStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"question\",\n      children: \"Example question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question_number\",\n      children: [\"Question \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 26\n      }, this), \"/10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = Question;\nexport default Question;\n\n/*import React, { useState } from 'react';\nimport './QuizStyles.css';\n\nconst QuizContainer = () => {\n    // example questions\n    const questions = [\n        {\n            id: 1,\n            questionText: 'What is the capital of France?',\n            options: ['New York', 'London', 'Paris', 'Tokyo'],\n            answer: 'Paris'\n        },\n        {\n            id: 2,\n            questionText: 'Who wrote Hamlet?',\n            options: ['Charles Dickens', 'William Shakespeare', 'Leo Tolstoy', 'Mark Twain'],\n            answer: 'William Shakespeare'\n        },\n        // ... add more questions as needed\n    ];\n\n    // state to track the current question\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n\n    // function to handle answer submission\n    const handleSubmit = (option) => {\n        // logic to check the answer and move to the next question\n        if (option === questions[currentQuestion].answer) {\n            console.log('correct!');\n        } else {\n            console.log('incorrect!');\n        }\n\n        // move to the next question\n        if (currentQuestion < questions.length - 1) {\n            setCurrentQuestion(currentQuestion + 1);\n        } else {\n            // end of quiz logic\n            console.log('quiz finished');\n        }\n    };\n\n    return (\n        <div className=\"question\">\n            <h2>{questions[currentQuestion].questionText}</h2>\n            <div className=\"answers\">\n                {questions[currentQuestion].options.map((option, index) => (\n                    <button key={index} className=\"answer\" onClick={() => handleSubmit(option)}>\n                        {option}\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default QuizContainer;*/\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","Question","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/9dgy/Desktop/CS392/quiz-app/src/components/Questions.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport './QuizStyles.css';\nconst Question = () => {\n    return (\n        <Card>\n            <h1 className=\"question\">Example question</h1>\n\n            <div className=\"answers\">\n                <div className=\"answer\">\n                    <p>Answer</p>\n                </div>\n                <div className=\"answer\">\n                    <p>Answer</p>\n                </div>\n                <div className=\"answer\">\n                    <p>Answer</p>\n                </div>\n                <div className=\"answer\">\n                    <p>Answer</p>\n                </div>\n            </div>\n\n            <p className=\"score\">\n                Score: <span>0</span>\n            </p>\n\n            <p className=\"question_number\">\n                Question <span>1</span>/10\n            </p>\n        </Card>\n    );\n};\n\nexport default Question;\n\n\n\n\n/*import React, { useState } from 'react';\nimport './QuizStyles.css';\n\nconst QuizContainer = () => {\n    // example questions\n    const questions = [\n        {\n            id: 1,\n            questionText: 'What is the capital of France?',\n            options: ['New York', 'London', 'Paris', 'Tokyo'],\n            answer: 'Paris'\n        },\n        {\n            id: 2,\n            questionText: 'Who wrote Hamlet?',\n            options: ['Charles Dickens', 'William Shakespeare', 'Leo Tolstoy', 'Mark Twain'],\n            answer: 'William Shakespeare'\n        },\n        // ... add more questions as needed\n    ];\n\n    // state to track the current question\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n\n    // function to handle answer submission\n    const handleSubmit = (option) => {\n        // logic to check the answer and move to the next question\n        if (option === questions[currentQuestion].answer) {\n            console.log('correct!');\n        } else {\n            console.log('incorrect!');\n        }\n\n        // move to the next question\n        if (currentQuestion < questions.length - 1) {\n            setCurrentQuestion(currentQuestion + 1);\n        } else {\n            // end of quiz logic\n            console.log('quiz finished');\n        }\n    };\n\n    return (\n        <div className=\"question\">\n            <h2>{questions[currentQuestion].questionText}</h2>\n            <div className=\"answers\">\n                {questions[currentQuestion].options.map((option, index) => (\n                    <button key={index} className=\"answer\" onClick={() => handleSubmit(option)}>\n                        {option}\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default QuizContainer;*/\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACID,OAAA,CAACF,IAAI;IAAAI,QAAA,gBACDF,OAAA;MAAIG,SAAS,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9CP,OAAA;MAAKG,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACpBF,OAAA;QAAKG,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACnBF,OAAA;UAAAE,QAAA,EAAG;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNP,OAAA;QAAKG,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACnBF,OAAA;UAAAE,QAAA,EAAG;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNP,OAAA;QAAKG,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACnBF,OAAA;UAAAE,QAAA,EAAG;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNP,OAAA;QAAKG,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACnBF,OAAA;UAAAE,QAAA,EAAG;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENP,OAAA;MAAGG,SAAS,EAAC,OAAO;MAAAD,QAAA,GAAC,SACV,eAAAF,OAAA;QAAAE,QAAA,EAAM;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAEJP,OAAA;MAAGG,SAAS,EAAC,iBAAiB;MAAAD,QAAA,GAAC,WAClB,eAAAF,OAAA;QAAAE,QAAA,EAAM;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,OAC3B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEf,CAAC;AAACC,EAAA,GA7BIP,QAAQ;AA+Bd,eAAeA,QAAQ;;AAKvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}